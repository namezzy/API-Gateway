version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: .
    ports:
      - "8080:8080"   # API Gateway主端口
      - "9090:9090"   # Prometheus指标端口
    volumes:
      - ./configs:/root/configs
      - ./logs:/root/logs
    environment:
      - CONFIG_FILE=/root/configs/config.yaml
    depends_on:
      - redis
      - backend1
      - backend2
      - backend3
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 模拟后端服务1 - 用户服务
  backend1:
    image: nginx:alpine
    ports:
      - "3001:80"
    volumes:
      - ./mock-backends/backend1:/usr/share/nginx/html
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 模拟后端服务2 - 用户服务备份
  backend2:
    image: nginx:alpine
    ports:
      - "3002:80"
    volumes:
      - ./mock-backends/backend2:/usr/share/nginx/html
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 模拟后端服务3 - 订单服务
  backend3:
    image: nginx:alpine
    ports:
      - "3003:80"
    volumes:
      - ./mock-backends/backend3:/usr/share/nginx/html
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana仪表板
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
